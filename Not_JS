Bài 1 : ĐẦU RA CỦA JAVASCRIPT
  // Javascript có thể Hiển Thị dữ liệu theo nhiều cách khác nhau
 1. Viết vào một phần tử HTML ==> innerHTML .
    - Để sử dụng phần tử này ta sử dụng ==> documrnt.getElementById(id) trong đó id ở trong các phần tử HTML
 2.Viết vào đâù ra HTML ==> document.write() .
    - Nên sử dụng vào mục đích thử nghiệm kết quả.
 3.Viết vào một hộp cảnh báo  ==> window.alert() .
    - Sử dụng làm hộp cảnh báo dữ liệu
    VD : alert('Hệ Thống sẽ khóa trong 2 phút tới' );
 4.Ghi vào bảng điều khiển hoặc làm cho nó ra kết quả  ==> console.log()
  - Nhằm sử dụng mục đích gỡ lỗi

// Data types
 - undefined : Trả về một cái gì đó chưa xác định .
 - null : nghĩa là không có gì .
 - boolean: Trả về dữ liệu true hay false
 - string : chuỗi
 - symbol : là giá trị duy nhất
 - number : là một con số
 - object : là một đối tượng lưu trữ rất nhiều các giá trị khác nhau .
 ///

 // Các từ khóa Javascript
 - var : Khai báo một biến
 - let : Khai báo một biến khối
 - const : Khai báo một hằng số khối ( một đối tượng mới , mảng mới , chức năng mới , RegExp) khi bạn phải xác định giá trị này thay đổi
 - if : Đánh dấu một khối câu lệnh được thực thi theo một điều kiện
 - switch : Đánh dấu một khối câu lệnh sẽ được thực thi trong các trường hợp khác nhau
 - for : Đánh dấu một khố câu lệnh sẽ được thực thi trong một vòng lặp
 - function : KHai báo một hàm
 - return :THoát khỏi một chức năng
 - try : Triển khai xử lý lỗi cho một khối câu lệnh


// Callback
- là hàm của function được truyền qua đối số
- khi gọi hàm khác
 1. là hàm
 2. Được truyền qua đối số
 3. Phải được gọi lại ( trong hàm nhận đối số )



/// HTML DOM ( Document Object Model )
1 . CÓ 3 thành phần
   - Element : Các thẻ như head , body , h1 , a
   - Attribute : Là các href , class , id
   - Text : Nội dung trong cái thẻ đó (chữ)
=> tiêu chuẩn W3C
---------------------------------------------------------

2. JAVASCRIPT, DOM API
- Javascript có thể chạy trên trình duyệt và server (NodeJS)

----------------------------------------------
////////////////////Element
3. Get Element methods
 - Element : ID , class , tag ,CSS Selector
-- ID
    document.getElementById('demo');
 -- class
   document.getElementsByClassName('.demo');
-- tag
   document.getElementsByTagName('p');
-- CSS Selector
   var textnode = document.querySelector('.text')

  -Muốn lấy ra nhiều text giống nhau
   var textnode = document.querySelector('.text:nth-child(1)');
   var textnode = document.querySelector('.text:nth-child(2)');
   - muốn lấy tất cả vd NHư các thẻ a và thẻ li
   var textnode = document.querySelectorAll(" .text:nth-child(1) li")
   var textnode = document.querySelectorAll(" .text:nth-child(2) li")

Kiến thức cũ nhắc lại (chú ý );
1.getElementById
   - Trả về trực tiếp Element // phải có id để dùng
2.getElementsByClassName
   - Phương thức getElementsByClassName () trả về một tập hợp tất cả các phần tử trong tài liệu với tên lớp được chỉ định, dưới dạng một đối tượng HTMLCollection .
   - Các HTMLCollection đối tượng đại diện cho một tập hợp các nút. Các nút có thể được truy cập bằng số chỉ mục. Chỉ số bắt đầu từ 0.

3.getElementsByTagName
   - Phương thức getElementsByTagName () trả về một tập hợp tất cả các phần tử trong tài liệu với tên thẻ được chỉ định, dưới dạng một đối tượng HTMLCollection .
   - Các HTMLCollection đối tượng đại diện cho một tập hợp các nút. Các nút có thể được truy cập bằng số chỉ mục. Chỉ số bắt đầu từ 0.
 --> để dùng trả về một Element : document.getElementsByTagName("P")[0] ta trỏ vào vào [0] một chuỗi length theo thứ tự cần muốn
4.querySelector
   - Trả về trực tiếp Element
5.querySelectorAll
   - Các Documentphương pháp querySelectorAll() trả về một tĩnh (không sống)
   - NodeList đại diện cho một danh sách các yếu tố của văn bản phù hợp với nhóm nhất định của bộ chọn.
6.HTML collection
   - Đối tượng HTMLCollection là một danh sách các phần tử HTML giống như một mảng.
   --> console.log(document.forms['chuyền đối tượng (chuỗi) vào']);
   --> tiện cho thẻ forms
7.document.write
   --> là sẽ ghi ra thẳng luôn khi đc thực thi
   --> document.write('hello')



----------------------------------
///////////// Attribute
DOM Attribute ( THÊM , XÓA BỎ )



// Nodeproperties



/// DOM CSS
//Dom style
var boxElement = document.querySelector('.box')

Object.assign(boxElement,style,{
   width :'200px',
   height :'100px'
})

//DOM EVENTS
1. Attribute events
2. Assign event using the element node


3. preventDefault : Giúp ta loại bỏ đi hành vi mặc định của trình duyệt trên một thẻ
    cách 1 :- document.getElementById("myAnchor").addEventListener("click", function(event){
  event.preventDefault()
});
   cách 2 :
      var aElement = document.links;
      for ( var  i = 0; i < aElement.length ; ++i){
         aElement[i].onclick = function(e){
            if( e.target.href.startsWith('https/123333')){
               e.preventDefault();
            }
         }
      }
    => cách bỏ đi mặc định của trình duyệt


4. stopPropagation : giúp ta loại bỏ đi sự kiện nội bọt



/// Event listener
1 . Event lister :
   -- xử lý nhiều việc khi 1 event xảy ra
   -- lắng nghe / Hủy bỏ lắng nghe .
2. JSON
3. Fetch
4. DOM location
5. Local storage
6. Session storage
7. Coding convention
8. Best Pratices
9. Mistakes
10 . Performance

///
--------------------------------------------------------------------
KIẾN THỨC CỐT LÕI

BÀI 1:  ---- JSON-----
1. Là một định dạng dữ liệu  (chuỗi)
2. JAVASCRIPT object notation
3. JSON : Number, boolean , null , Arry, object,string
BÀI 2: -----Promise-----
1) sync , async
Khái niệm : Sync : Đồng bộ
            Async : Bất đồng bộ

Bài 3: ------Promise (pain)
// code lồng nhau callback